/* This file contains flex input file */

%{

#include <cstdio>
#include <string>
using namespace std;
#include "listing.h"
#include "tokens.h"

%}

%option noyywrap
ws [ \t]+
comment --.*\n
line \n
id [A-Za-z_][A-Za-z0-9_]* /* Modified for underscores */
digit [0-9]
int {digit}+
punc [(),:;]

%%

{ws} { ECHO; }
{comment} { ECHO; nextLine(); }
{line} { ECHO; nextLine(); }

"<" { ECHO; return(RELOP); }
"+" { ECHO; return(ADDOP); }
"*" { ECHO; return(MULOP); }
"or" { ECHO; return(OROP); } /* Logical OR operator */
"not" { ECHO; return(NOTOP); } /* Logical NOT operator */
"rem" { ECHO; return(REMOP); } /* Remainder operator */
"**" { ECHO; return(EXPOP); } /* Exponentiation operator */
"begin" { ECHO; return(BEGIN_); }
"boolean" { ECHO; return(BOOLEAN); }
"end" { ECHO; return(END); }
"endcase" { ECHO; return(ENDREDUCE); }
"function" { ECHO; return(FUNCTION); }
"if" { ECHO; return(IF); } /* Reserved word if */
"else" { ECHO; return(ELSE); } /* Reserved word else */
"endcase" { ECHO; return(ENDCASE); } /* Reserved word endcase */
"endif" { ECHO; return(ENDIF); } /* Reserved word endif */
"others" { ECHO; return(OTHERS); } /* Reserved word others */
"real" { ECHO; return(REAL); } /* Reserved word real */
"then" { ECHO; return(THEN); } /* Reserved word then */
"when" { ECHO; return(WHEN); } /* Reserved word when */

{id} { ECHO; return(IDENTIFIER); }
{int} { ECHO; return(INT_LITERAL); }

// Real Literal
{int}"."{int}("e"|"E"("+"|"-")?{int})? { ECHO; return(REAL_LITERAL); }

// Boolean Literal
"true"|"false" { ECHO; return(BOOL_LITERAL); }

{punc} { ECHO; return(yytext[0]); }

. { ECHO; appendError(LEXICAL, yytext); }

%%

int main()
{
    firstLine();
    FILE *file = fopen("lexemes.txt", "wa");
    int token = yylex();
    while (token)
    {
        fprintf(file, "%d %s\n", token, yytext);
        token = yylex();
    }
    lastLine();
    fclose(file);
    return 0;
}
